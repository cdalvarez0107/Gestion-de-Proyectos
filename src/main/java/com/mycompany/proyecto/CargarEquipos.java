/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto;

import java.util.LinkedList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author carlos
 */
public class CargarEquipos extends javax.swing.JFrame {

    /**
     * Creates new form CargarEquipos
     */
    public CargarEquipos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jLabel1.setText("Carga Masiva de Equipos");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cargar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu2.setText("Regresar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos XML", "xml");
        
        fileChooser.setFileFilter(filtro);
        
        int seleccion = fileChooser.showOpenDialog(this);
        
        if(seleccion == JFileChooser.APPROVE_OPTION){
            File archivo = fileChooser.getSelectedFile();
            leerXml(archivo);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    private void leerXml(File archivo){
        try{
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dbBuilder = dbFactory.newDocumentBuilder();
            Document doc = dbBuilder.parse(archivo);
            
            doc.getDocumentElement().normalize();
            
            NodeList nList = doc.getElementsByTagName("equipo");
            
            for(int i=0; i<nList.getLength();i++){
                
                Node nNode = nList.item(i);
                
                if(nNode.getNodeType() == Node.ELEMENT_NODE){
                    
                      Element e = (Element) nNode;
                      
                      String idEquipo = e.getAttributeNode("id").getTextContent();
                      String nombreEquipo = e.getAttributeNode("nombre").getTextContent();
                      String gerente = e.getAttributeNode("lider").getTextContent();
                      
                      Equipo equipoNuevo = new Equipo();
                      equipoNuevo.setId(Integer.parseInt(idEquipo));
                      equipoNuevo.setNombreEquipo(nombreEquipo);
                      equipoNuevo.setGerente(gerente);
                      Proyecto.equipos.add(equipoNuevo);
                      
                      
                      NodeList mList = e.getElementsByTagName("miembro");
                      
                        for(int m=0; m<mList.getLength();m++){
                            Node mNode = mList.item(m);
                            
                            if(mNode.getNodeType() == Node.ELEMENT_NODE){
                                
                                Element me = (Element) mNode;
                      
                                Equipo equipoSeleccionado = null;
                                for(Equipo eq: Proyecto.equipos){
                                    if(eq.getNombreEquipo().equals(nombreEquipo)){
                                        equipoSeleccionado = eq;
                                        break;
                                    }
                                }
                                Usuario miembroSeleccionado = null;
                                for(Usuario u: Proyecto.usuarios){
                                    if(u.getCorreo().equals(me.getElementsByTagName("correo").item(0).getTextContent())){
                                        miembroSeleccionado = u;
                                        break;
                                    }
                                }
                                if(equipoSeleccionado!=null && miembroSeleccionado!=null){
                                    equipoSeleccionado.asignarMiembro(miembroSeleccionado);
                                    JOptionPane.showMessageDialog(this, "Miembro agregado exitosamente");
                                    
                                }
                            }    
                        }
                }
            }
            
            llenarTabla();
            
            
        
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    
    private void llenarTabla() {
        DefaultTableModel t = new DefaultTableModel(new String []{"Id","Nombre","Gerente"},Proyecto.equipos.size());
        
        jTable1.setModel(t);
        
        TableModel modelo = jTable1.getModel();
        
        for (int i=0; i<Proyecto.equipos.size(); i++){
            Equipo u = Proyecto.equipos.get(i);
            modelo.setValueAt(u.getId(), i, 0);
            modelo.setValueAt(u.getNombreEquipo(), i,1);
            modelo.setValueAt(u.getGerente(), i,2);
        }
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
